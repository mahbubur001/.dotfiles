

# Enable mouse
set -g mouse on

# Copy with mouse to clipboard in Mac
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Do not show a prompt before killing a pane or window
bind-key x kill-pane
bind-key & kill-window

# General {{{

# Correct Colors
set-option -g default-terminal "xterm-256color"

# Terminal Overrides
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'


# misc options
set -g mouse on
set-option -g focus-events on
set-option -g set-titles on
set -g history-limit 10000
setw -g aggressive-resize on
set -g renumber-windows on

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# unbind default prefix and set it to Ctrl+j
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off
# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# }}}

# Key Binds {{{

# Reload Config
bind r source-file ~/.config/tmux/tmux.conf \; display " Config reloaded! "

# Split window and fix path for tmux 1.9
unbind '"'
unbind %

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Resize Pane
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# }}}
bind-key d run-shell "~/.config/tmux/sh/smart-kill-pane.sh"

# Vi Keys {{{

# Set Vi mode for copy
setw -g mode-keys vi

# Making copy mode more Vi like
unbind [
bind Escape copy-mode
bind -T copy-mode-vi v send -X begin-selection

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'

# }}}

# Status Bar {{{

# Colors {{{

terminal_bg='#282828'
status_bar_bg=$terminal_bg
active_window_bg=magenta
session_bg=blue
time_bg=green

# }}}

set -g status-left-length 40
set -g status-right-length 150
set -g status-interval 5
set -g status-justify left

set-window-option -g window-status-separator ''

set-option -g status-style fg=white,bg=$status_bar_bg

rglyph="" # \ue0b0
lglyph="" # \ue0b2
set-window-option -g window-status-format "#[fg=$status_bar_bg,bg=brightblack]$rglyph #[fg=white]#I:#W #[fg=brightblack,bg=$status_bar_bg]$rglyph"

# active window title colors
set-window-option -g window-status-current-format "#[fg=$status_bar_bg,bg=$active_window_bg]$rglyph #I:#W #[fg=$active_window_bg,bg=$status_bar_bg]$rglyph"

# pane border colors
set-window-option -g pane-active-border-style fg=green
set-window-option -g pane-border-style fg=black

# message text
set-option -g message-style bg=$status_bar_bg,fg=white

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour yellow

# clock
set-window-option -g clock-mode-colour brightyellow

tm_session_name="#[default,bg=$session_bg,fg=$status_bar_bg] #S #[fg=$session_bg,bg=$status_bar_bg]$rglyph"
set -g status-left "$tm_session_name"

tm_date="#[fg=$time_bg]$lglyph#[default,bg=$time_bg,fg=$status_bar_bg] #{?pane_synchronized,--SYNCED--,} #(is-online)  #(date '+%a, %b %d - %I:%M %p') #[fg=$status_bar_bg]"
set -g status-right "$tm_date"

# }}}

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind -r C-h run "tmux select-pane -L"
bind -r C-j run "tmux select-pane -D"
bind -r C-k run "tmux select-pane -U"
bind -r C-l run "tmux select-pane -R"
bind -r C-\ run "tmux select-pane -l"
# wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux:#I #W"


bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# # forget the find window.  That is for chumps
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
# bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
# bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
# bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
# # bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
# bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
# bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
# bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
# bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity
#

# Add all plugins here
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'


#Plugin configs
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'"

# -----------------------------------------------------------------------------
# This config is targeted for tmux 3.0+.
#
# Read the "Plugin Manager" section (bottom) before trying to use this config!
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------

# Set a new prefix / leader key.
set -g prefix C-a
bind C-a send-prefix

# Allow opening multiple terminals to view the same session at different sizes.
setw -g aggressive-resize on

# Remove delay when switching between Vim modes.
set -sg escape-time 0

# Allow Vim's FocusGained to work when your terminal gains focus.
#   Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Add a bit more scroll history in the buffer.
set -g history-limit 50000

# Enable color support inside of tmux.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Send xterm compatible control arrow keys so they work with Vim.
setw -g xterm-keys on

# Ensure window titles get renamed automatically.
setw -g automatic-rename

# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows on

# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Enable full mouse support.
set -g mouse on


# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-justify centre           # center window list for clarity
set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

terminal_bg='#282828'
status_bar_bg=$terminal_bg
active_window_bg=magenta
session_bg=blue
time_bg=green
set-window-option -g window-status-separator ''

set-option -g status-style fg=white,bg=$status_bar_bg

set-window-option -g window-status-format "#[fg=$status_bar_bg,bg=brightblack]#[fg=white] #I:#W #[fg=brightblack,bg=$status_bar_bg]"

# active window title colors
set-window-option -g window-status-current-format "#[fg=$status_bar_bg,bg=$active_window_bg] #I:#W #[fg=$active_window_bg,bg=$status_bar_bg]"

# pane border colors
# set-window-option -g pane-active-border-style fg=green
# set-window-option -g pane-border-style fg=black

# message text
set-option -g message-style bg=$status_bar_bg,fg=white

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour yellow

set -g status-left-length 0
set -g status-left ''
set -g status-right "#[default,bg=$session_bg,fg=$status_bar_bg] #S #[fg=$session_bg,bg=$status_bar_bg]"
set -g status-right-length 40


# Display a clock on the bottom right of the status bar.
#set -g status-right '%a %Y-%m-%d %H:%M'
#set -g status-right-length 20

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# Unbind default keys
unbind C-b
unbind '"'
unbind %


bind-key -n 'C - }' select-window -t +1
bind-key -n 'C - {' select-window -t -1


# Reload the tmux config.
bind-key r source-file  ~/.config/tmux/tmux.conf \; display " Config reloaded! "

# Split panes.
bind-key h split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# Resize Pane
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind -r C-h run "tmux select-pane -L"
bind -r C-j run "tmux select-pane -D"
bind -r C-k run "tmux select-pane -U"
bind -r C-l run "tmux select-pane -R"


# -----------------------------------------------------------------------------
# Custom script
# -----------------------------------------------------------------------------

bind-key d run-shell "~/.config/tmux/sh/smart-kill-pane.sh"                                                       # Smart kill pane or window
bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"  # Open TODO.md file

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# If you didn't use my dotfiles install script you'll need to:
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# Add all plugins here
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'on' # Automatically restore tmux windows when tmux starts.
set -g @continuum-boot 'off' # Don't auto-launch tmx at machine boot.  Give me a chance to gcert first.

# Preserves what was readable in each pane.
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.config/tmux/plugins/tpm/tpm'"
